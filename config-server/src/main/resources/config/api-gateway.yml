server:
  port: 8099

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/food-delivery
          jwk-set-uri: http://localhost:8080/realms/food-delivery/protocol/openid-connect/certs
        client:
          registration:
            keycloak:
            client-id: api-gateway
            client-secret: NowvNnxwcLOUtpslfPz3OTTAUzTNWfAj
            provider: keycloak
            scope: openid
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # Applies to all routes
            allowedOrigins:
              - "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders:
              - "*"
      routes:
        # Discovery Server Route
        - id: discovery-server
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/**
          filters:
            - RewritePath=/eureka(?<remaining>.*), /${remaining}
        # Demo Service Route
        - id: demo
          uri: lb://DEMO
          predicates:
            - Path=/demo/**
        - id: user
          uri: lb://USER
          predicates:
            - Path=/user/**
        - id: reservation
          uri: lb://reservation
          predicates:
            - Path=/reservations/**
# Keycloak configuration
keycloak:
  auth-server-url: http://localhost:8080
  realm: food-delivery
  resource: api-gateway
  credentials:
    secret: NowvNnxwcLOUtpslfPz3OTTAUzTNWfAj # Only for confidential clients

# Admin user credentials
keycloak-admin:
  username: admin
  password: admin

